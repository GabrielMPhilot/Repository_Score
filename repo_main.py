from re import T
import streamlit as st
import numpy as np
import pandas as pd
import base64
import plotly.graph_objects as go
import plotly.express as px
from PIL import Image
from computer.data_process import *
from computer.data_front import *
from computer.funcomputer import *
import time

st.image('[LOGO] Eduqo.png')

# Titulo


"""
# üå°Ô∏è Repositorios - Produto


"""

# Side bar
## Imagem na side bar
image = Image.open('[LOGO] Eduqo.png')
st.sidebar.image(image,caption='Eduqo - Plataforma QM√°gico',use_column_width=True)

st.sidebar.markdown('Feito por: Gabriel Philot (Tio Gibbs)')
st.sidebar.write('#### Material de apoio, caso queira saber mais sobre o projeto.')
st.sidebar.write('####')
st.sidebar.write("##### Github:  [link](https://github.com/GabrielMPhilot/Repository_Score)")
st.sidebar.write('#')
st.sidebar.write('#### Resultado da classifica√ß√£o de nosso modelo:',get_table_download_link(lista_resul), unsafe_allow_html=True)

# Grande ideia

"""
### üí° Grande ideia do Projeto
O objetivo desse projeto √© criar um HealthScore escalavel e preciso sobre nossos clientes.
Utilizamos primeiramente dados diversos da usabilidade do Produto (por enquanto), para criarmos
m√©tricas que consigam mapear se nossos clientes est√£o utilizando a plataforma de maneira adequada,
com as m√©tricas √© formado um modelo para Rankear cada escola em um grau de risco especifico.

### üíæ Dados utilizados
Os dados utilizados foram segmentados (por enquanto) em 4 diferentes tabelas.
"""
"""
#### 1. Tabela de Conteudos:
Essa tabela contempla dados de conte√∫dos de todos os tipos do caderno, segmenta cada tipo, 
como por exemplo PDFS, Videos, Tarefas e S.Exercicios.
O intervalo de extra√ß√£o desses dados √© de
dados de  **01/03/2020 at√© 15/08/2020**.
#### 2. Tabela de Quest√µes:
Essa Tabela contempla dados do n¬∞ de quest√µes totais subidas(prof/admin), n¬∞ de quest√µes 
discursivas subidas(profs/admin),
n¬∞ de quest√µes totais do banco subidas (prof/admin) . O intervalo de extra√ß√£o desses dados √© de
dados de  **01/01/2021 at√© 15/08/2021**.
#### 3. Tabela de Relat√≥rios:
Essa Tabela contempla dados do n¬∞ de vizualiza√ß√£o de rel√°torios (proffs/admin/alunos) de A.A's, 
n¬∞ de vizualiza√ß√£o de rel√°torios (prof/admin/alunos) de S.Exs,
n¬∞ de vizualiza√ß√£o de rel√°torios (prof/admin) de Cadernos, n¬∞ de vizualiza√ß√£o de rel√°torios 
(admin) de AD's, n¬∞ de vizualiza√ß√£o de rel√°torios (admin) Mensais (QBR,Mensal). O intervalo de extra√ß√£o desses dados √© de
dados de  **01/01/2021 at√© 15/08/2021**.
#### 4. Tabela de Engajamento com funcionalidades diferenciadas
Essa Tabela contempla dados de n¬∞ corre√ß√µes/intera√ß√µes n√£o automatizadas com os alunos (prof/admin),
n¬∞ de resultados baixados (prof/admin), n¬∞ de comentarios no forum (prof/admin/aluno), 
n¬∞ de likes/dislikes em conte√∫dos (alunos) e n¬∞ de upload de v√≠deos/√°udios subidos (alunos). O intervalo de extra√ß√£o desses dados √© de
dados de  **01/01/2021 at√© 15/08/2021**.

"""

"""
### üë©üèΩ‚Äçüè´ Metodologia
Com os dados, criamos m√©tricas que tentam parametrizar o uso de uma funcionalidade da escola,
Exemplo: N√∫mero de PDFS/total de conte√∫dos, ou N√∫mero de vizualiza√ß√£o de rel√°torios/n¬∞ de professores ativos.
Obtendo todas as m√©tricas, fazemos a soma destas e normalizamos os dados. Ap√≥s a normaliza√ß√£o
√© criado um modelo que classificamos por quartil's o Risco da escola baseado na soma de todas as m√©tricas.


"""
"""
### üîç Certo agora vamos para os **Resultados**.

"""
# CARDS

figa = go.Figure()

figa.add_trace(go.Indicator(
    #mode = "number+delta",
    value = total_escolas ,
    domain = {'x': [0.25, 0.75], 'y': [0.7, 1]},
    title = {"text": "N¬∞ de escolas analisadas<br><span style='font-size:0.8em;color:gray'>"}))
    ##delta = {'reference': 400, 'relative': True, 'position' : "top"}))
figa.add_trace(go.Indicator(
    #mode = "number+delta",
    value = percen_risco,
    domain = {'x': [0.25, 0.75], 'y': [0, 0.3]},
    title = {"text": "<span style='font-size:1em;color:red'>%<br><span style='font-size:0.8em;color:red'>de escolas em Risco alto (Reposit√≥rios)</span><br>"}))
    ##delta = {'reference': 400, 'relative': True, 'position' : "top"}))
st.plotly_chart(figa)


# Gr√°fico 1. Health Score - Pontua√ß√£o via nosso modelo


fig =px.bar(grafico_um, x='Risco', y='Quantidade de escolas',
           color='Risco',
           color_discrete_sequence=["#E45756","#F58518","#54A24B","#4C78A8"],
           #color_discrete_sequence=px.colors.qualitative.T10,
            text=grafico_um['Porcentagem'])


fig.update_xaxes(showgrid=False)
fig.update_layout(title = "Distribui√ß√£o no N¬∞ de escolas por grau de Risco")

st.plotly_chart(fig)

left_column, right_column = st.columns(2)
pressed = right_column.button('Download Resultado')
if pressed:
    left_column.write(get_table_download_link(lista_resul), unsafe_allow_html=True)

"""
"""
"""
### ü©∫ Lista com todos os Namespaces classificados
"""
left_column, right_column = st.columns(2)
pressed = left_column.button('Mostrar tabela')
if pressed:
    alpha_show=1
else:
    alpha_show=0
if alpha_show==1:
    st.dataframe(list_front)

left_column, right_column = st.columns(2)
pressed = right_column.button('Esconder tabela')
if pressed:
    alpha_show=0



"""
"""
"""
### üìä Agora para visualiza√ß√£o das M√©tricas
"""
####################################### FILTRO ##############################
"""
"""
#lista_resul
"""
#### Escolha um namespace
"""


select = st.selectbox('', namespace_list, key='2')

'Aguarde s√≥ um momentinho'
latest_iteration = st.empty()
bar = st.progress(0)
for i in range(100):
  # Update the progress bar with each iteration.
  latest_iteration.text(f'Processando {i+1}')
  bar.progress(i + 1)
  time.sleep(0.03)
'...pronto!'

aux_show=1
a_dict=0

# Mostrando grau de risco do namespace
ans=lista_resul.copy()
ans=ans[(ans["namespace"]==select)].reset_index(drop=True)
ans=ans.loc[0,"Risco"]


"""
"""
if ans == 'Risco alto':
    st.write('### O Grau de Risco do namespace √©: ',ans," üî•")
elif ans == 'Risco m√©dio alto':
    st.write('### O Grau de Risco do namespace √©: ',ans," ‚ö†Ô∏è")
elif ans == 'Risco m√©dio baixo':
    st.write('### O Grau de Risco do namespace √©: ',ans," ü•à")
elif ans == 'Risco baixo':
    st.write('### O Grau de Risco do namespace √©: ',ans," ü•á")

"""
"""
"""
### üìë Como interpretar os gr√°ficos:
Nessa vers√£o os valores que est√£o sendo mostrados j√° s√£o tratados e mostrados,
portanto o verdadeiro valor deles √© bater o olho nas colunas e ver se a coluna
relacionada a o namespace √© maior ou menor que a m√©dia da eduqo (tamb√©m consegue
saber o quanto √© maior ou menor pela diferen√ßa de tamanho das barras).
"""
"""
"""
# Gr√°fico conteudos
f_cont=t_cont_grafico[(t_cont_grafico["namespace"]==select)]
f_cont=t_cont_media_grafico.append(f_cont).reset_index(drop=True)
f_cont=df_set_plotly(f_cont)

fig_cont =px.bar(f_cont, x='M√©tricas', y='Valor',
               color='Namespace',barmode='group',
               color_discrete_sequence=["rgb(102, 197, 204)","rgb(248, 156, 116)"])#"#54A24B","#4C78A8"],
               #color_discrete_sequence=px.colors.qualitative.T10,
                #text=f_cont['Valor'])


fig_cont.update_xaxes(showgrid=False)
fig_cont.update_layout(title = "M√©tricas na Tabela de Conte√∫dos")

# Obs




st.plotly_chart(fig_cont)
"""
##### Obs Gr√°fico de conte√∫dos: 
Nesse gr√°fico as m√©tricas relacionadas a PDF's
e v√≠deos s√£o inversamente proporcionais a pontua√ß√£o, ou seja quanto menor a quantidade de conte√∫dos
destes tipos maior ser√° a pontua√ß√£o.
"""

# Gr√°fico relatorios
f_rela=t_rela_grafico[(t_rela_grafico["namespace"]==select)]
f_rela=t_rela_media_grafico.append(f_rela).reset_index(drop=True)
f_rela=df_set_plotly(f_rela)

fig_rela =px.bar(f_rela, x='M√©tricas', y='Valor',
               color='Namespace',barmode='group',
               color_discrete_sequence=["rgb(102, 197, 204)","rgb(248, 156, 116)"])#"#54A24B","#4C78A8"],
               #color_discrete_sequence=px.colors.qualitative.T10,
                #text=f_rela['Valor'])


fig_rela.update_xaxes(showgrid=False)
fig_rela.update_layout(title = "M√©tricas na Tabela de Rel√°torios")


st.plotly_chart(fig_rela)

# Gr√°fico questoes
f_quest=t_quest_grafico[(t_quest_grafico["namespace"]==select)]
f_quest=t_quest_media_grafico.append(f_quest).reset_index(drop=True)
f_quest=df_set_plotly(f_quest)

fig_quest =px.bar(f_quest, x='M√©tricas', y='Valor',
               color='Namespace',barmode='group',
               color_discrete_sequence=["rgb(102, 197, 204)","rgb(248, 156, 116)"])#"#54A24B","#4C78A8"],
               #color_discrete_sequence=px.colors.qualitative.T10,
                #text=f_quest['Valor'])


fig_quest.update_xaxes(showgrid=False)
fig_quest.update_layout(title = "M√©tricas na Tabela de Quest√µes")


st.plotly_chart(fig_quest)

# Gr√°fico engajamento
f_eng=t_eng_grafico[(t_eng_grafico["namespace"]==select)]
f_eng=t_eng_media_grafico.append(f_eng).reset_index(drop=True)
f_eng=df_set_plotly(f_eng)

fig_engaja =px.bar(f_eng, x='M√©tricas', y='Valor',
               color='Namespace',barmode='group',
               color_discrete_sequence=["rgb(102, 197, 204)","rgb(248, 156, 116)"])#"#54A24B","#4C78A8"],
               #color_discrete_sequence=px.colors.qualitative.T10,
                #text=f_eng['Valor'])


fig_engaja.update_xaxes(showgrid=False)
fig_engaja.update_layout(title = "M√©tricas na Tabela de Engajamento")


st.plotly_chart(fig_engaja)

"""

##### Obs Gr√°fico de engajamento: 
 Nesse gr√°fico a m√©trica relacionada a baixar resultados
√© inversamente proporcional, ou seja quanto menos resultados a escola baixar maior ser√° a pontua√ß√£o,
pois esse dado indica que a escola n√£o est√° utilizando nossas ferramentas de rel√°torios e isso pode
vir a ser uma grande dor da escola, exemplo desse dor: Col√©gio Eccos.
"""

"""
### üíé Ilumina√ß√µes ( Insights )
O foco ( por enquanto ) ser√° em cima do mal uso da plataforma.
"""

expander_cont = st.expander("M√©tricas de Conte√∫dos -> (clique aqui üñ±Ô∏è)")
expander_cont.write("(1) Escolas com personaliza√ß√£o alta geralmente fazem bom uso de tarefas e s√©rie de exerc√≠cios. (2) Escolas que usam a plataforma como reposit√≥rios tendem a utilizar muitos v√≠deos e pdfs.")
expander_rel = st.expander("M√©tricas de Rel√°torios -> (clique aqui üñ±Ô∏è)")
expander_rel.write("(1) Visualiza√ß√£o de relat√≥rios: Os nossos relat√≥rios s√£o um de nossos diferenciais para os concorrentes, e sua subutiliza√ß√£o tamb√©m pode indicar um mal uso da plataforma.")
expander_que = st.expander("M√©tricas de Quest√µes -> (clique aqui üñ±Ô∏è)")
expander_que.write("(1) Escolas que utilizam pouco o banco n√£o valorizam um de nossos principais diferenciais competitivos em rela√ß√£o ao Google Classroom, ent√£o pode ser uma quest√£o perigosa para potenciais churns. (2) Baixo uso de quest√µes discursivas pode significar uma baixa personaliza√ß√£o do uso da plataforma.")
expander_eng = st.expander("M√©tricas de Engajamento -> (clique aqui üñ±Ô∏è)")
expander_eng.write("(1) Escolas engajadas e personalizadas, fazem uso de ferramentas como marcar/interagir com aluno para corrigir seus trabalhos (corre√ß√µes com intera√ß√µes com alunos). (2) Escolas engajadas e personalizadas interagemm e d√£o feedbacks constantes para seus alunos, ent√£o a conversa com alunos atrav√©s de forums deve ser uma forma boa de feedback para os estudos dos alunos. (3) Baixar resultados significa que a escola n√£o faz um bom uso de nossas ferramentas de rel√°torios. (4) Alunos interagindo e curtindo cont√©udos s√£o um bom sinal de engajamento com a escola. (5) Alunos subindo v√≠deos e √°udios s√£o um bom sinal de engajamento e personaliza√ß√£o do ensino.")


"""
### üõ†Ô∏è Pr√≥ximos Passos
(1) - Receber feedback sobre nossos dados utilizados e ver se temos algo a acrescentar
"""
"""
(2) - Olhar mais a fundo as m√©tricas de tarefas e quest√µes discursivas pois elas podem enganar,
exemplo: Guilherme de almeida
"""
"""
(3) - Melhorar visualiza√ß√£o na parte das tabelas das M√©tricas.
"""
"""
(4) - Melhorar fluxo de informa√ß√µes do rel√°torio.
"""
"""
(5) - Estat√≠stica e Machine Learning para avaliar as correla√ß√µes entre as v√°riaveis.
"""